version: '3'

services:
  db:
    image: postgres:14.4
    environment: 
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    profiles:
      - default
  web:
    build:
      context: ./web
    environment:
      MERCHANT_ID: ${PAYTRAIL_MERCHANT_ID}
      SECRET_KEY: ${PAYTRAIL_SECRET_KEY}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      URL: ${URL}
      CALLBACK_URL: ${CALLBACK_URL}
      NEXT_PUBLIC_STRAPI_API_URL: ${PUBLIC_STRAPI_API_URL}
    profiles:
      - default
  cms:
    build:
      context: ./cms
    environment:
      HOST: ${HOST}
      PORT: ${PORT}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - 1337:1337
    profiles:
      - default
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
    depends_on:
      - web
      - cms
    ports:
      - 80:80
      - 443:443
    profiles:
      - default
  certbot:
    image: certbot/certbot
    ports:
      - 80:80
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    profiles:
      - setup
    command: >
      certonly
        --standalone 
          -d ${FQDN}
          --email ${CERTBOT_EMAIL}
          --agree-tos